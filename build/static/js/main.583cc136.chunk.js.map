{"version":3,"sources":["assets/icon-moon.svg","assets/icon-sun.svg","header/header.js","assets/icon-location.svg","assets/icon-company.svg","assets/icon-website.svg","assets/icon-twitter.svg","main/main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","theme","setTheme","className","onClick","modeState","document","querySelector","modeImg","console","log","innerHTML","src","Sun","Moon","alt","Main","props","user","setUser","useEffect","axios","get","then","response","data","date","Date","created_at","dateJoined","getDate","year","getFullYear","month","getMonth","onSubmit","evt","preventDefault","searchValue","value","htmlFor","type","name","placeholder","id","avatar_url","login","dateTime","bio","public_repos","followers","following","LocationImg","location","Blog","blog","Twitter","twitter_username","CompanyImg","company","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.583cc136.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-moon.cce754ce.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.f28a8996.svg\";","import { useState } from 'react'\r\nimport Moon from '../assets/icon-moon.svg'\r\nimport Sun from '../assets/icon-sun.svg'\r\nconst Header = () => {\r\n\r\n    const [theme, setTheme] = useState(true)\r\n\r\n    const handleClick = () => {\r\n        const modeState = document.querySelector(\".mode__state\")\r\n        const modeImg = document.querySelector(\".mode__img\")\r\n        setTheme(!theme)\r\n        console.log(theme)\r\n        if (theme) {\r\n            modeState.innerHTML = \"Light\"\r\n            modeImg.src = `${Sun}`\r\n        } else {\r\n            modeState.innerHTML = \"Dark\"\r\n            modeImg.src = `${Moon}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"app__title\">devfinder</h1>\r\n\r\n            <button className=\"theme--control\"\r\n                aria-label=\"theme toggle light and dark mode\"\r\n                onClick={handleClick}>\r\n\r\n                <div className=\"light__mode\"\r\n                    aria-live=\"polite\">\r\n\r\n                    <span className=\"mode__state\">Dark</span>\r\n                    <img className=\"mode__img\"\r\n                        src={Moon}\r\n                        alt=\"\" />\r\n\r\n                </div>\r\n            </button>\r\n\r\n        </header>\r\n    )\r\n}\r\nexport default Header","export default __webpack_public_path__ + \"static/media/icon-location.f11c5487.svg\";","export default __webpack_public_path__ + \"static/media/icon-company.6f78ffb3.svg\";","export default __webpack_public_path__ + \"static/media/icon-website.b7923f6c.svg\";","export default __webpack_public_path__ + \"static/media/icon-twitter.f6a2a695.svg\";","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport LocationImg from '../assets/icon-location.svg'\r\nimport CompanyImg from '../assets/icon-company.svg'\r\nimport Blog from '../assets/icon-website.svg'\r\nimport Twitter from '../assets/icon-twitter.svg'\r\n\r\nconst Main = (props) => {\r\n    const [user, setUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        console.log(\"useEffect in action\");\r\n        return axios.get(\"https://api.github.com/users/octocat\")\r\n            .then(response => {\r\n                console.log(\"promise fullfilled\");\r\n                setUser(response.data)\r\n                 console.log(response.data)\r\n            })\r\n\r\n    }, [])\r\n\r\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n    const date = new Date(user.created_at)\r\n    const dateJoined = date.getDate()\r\n    const year = date.getFullYear()\r\n    const month = months[date.getMonth()]\r\n    console.log(year)\r\n    console.log(month)\r\n    console.log(dateJoined)\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault()\r\n        const searchValue = document.querySelector(\".search__user\").value\r\n        const url = \"https://api.github.com/users/\"\r\n\r\n        console.log(searchValue)\r\n        axios\r\n            .get(`${url}${searchValue}`)\r\n            .then(response => {\r\n                setUser(response.data)\r\n            })\r\n        // console.log(\"user\")\r\n        console.log(user)\r\n\r\n    }\r\n\r\n    return (\r\n        <main>\r\n\r\n            <form className=\"search__container\" onSubmit={handleSubmit}>\r\n\r\n                <label htmlFor=\"search__user\" className=\"search__lbl\">\r\n                    <span className=\"sr__only\">Search for github username </span>\r\n                    <input type=\"search\"\r\n                        name=\"search__github__username\" placeholder=\"Search Github username...\" id=\"search__user\" className=\"search__user\" />\r\n                </label>\r\n\r\n                <button className=\"search--btn\">Search</button>\r\n\r\n            </form>\r\n\r\n            <div className=\"card\">\r\n                <figure className=\"card__profile\">\r\n                    <img className=\"card__profile__img\" src={user.avatar_url} alt=\"\" />\r\n                    <figcaption className=\"profile__card__details\">\r\n                        <h2 className=\"user__name\">{user.name}</h2>\r\n                        <p className=\"user__handle\">{user.login}</p>\r\n                        <p className=\"user__joined\">Joined<time dateTime=\"2011\"> {dateJoined} {month} {year}</time> </p>\r\n                    </figcaption>\r\n                </figure>\r\n                <p className=\"extra__content\">\r\n                    {user.bio === null ? <span className=\"no__bio\">\"This profile has no bio\"</span> : user.bio}                   \r\n                </p>\r\n\r\n                <div className=\"card__table\">\r\n                    <dl className=\"table__data\">\r\n                        <div className=\"repos__container\">\r\n                            <dt>Repos</dt>\r\n                            <dd>{user.public_repos}</dd>\r\n                        </div>\r\n                        <div className=\"followers__container\">\r\n                            <dt>Followers</dt>\r\n                            <dd>{user.followers}</dd>\r\n                        </div>\r\n                        <div className=\"following__container\">\r\n                            <dt>Following</dt>\r\n                            <dd>{user.following}</dd>\r\n                        </div>\r\n                    </dl>\r\n                </div>\r\n\r\n                <address>\r\n                    <div className=\"location\">\r\n                        <img src={LocationImg} alt=\"\" />\r\n                        <span className=\"area\">{user.location}</span>\r\n                    </div>\r\n                    <div className=\"blog\">\r\n                        <img className=\"blog__img\" src={Blog} alt=\"\" />\r\n                        <span className=\"user__blog\">{user.blog}</span>\r\n                    </div>\r\n                    <div className=\"twitter\">\r\n                        <img className=\"twitter__img\" src={Twitter} alt=\"\" />\r\n                        <span className=\"user__twitter\">{user.twitter_username}</span>\r\n                    </div>\r\n                    <div className=\"company__details\">\r\n                        <img className=\"company__img\" src={CompanyImg} alt=\"\" />\r\n                        <span className=\"company__name\">{user.company}</span>\r\n                    </div>\r\n                </address>\r\n            </div>\r\n\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main","import '../src/sass/app.scss'\nimport Header from './header/header';\nimport Main from './main/main'\nfunction App() {\n\n  \n \n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}